services:
  # API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ../configs/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - auth-service
      - core-service
      - files-service
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ..
      dockerfile: services/auth/Dockerfile
    expose:
      - "${AUTH_PORT}"
    environment:
      - PORT=${AUTH_PORT}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - main-db
    restart: unless-stopped

  # Core Service
  core-service:
    build:
      context: ..
      dockerfile: services/core/Dockerfile
    expose:
      - "${CORE_PORT}"
    environment:
      - PORT=${CORE_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - FILES_SERVICE_URL=${FILES_SERVICE_URL}
    depends_on:
      - main-db
    restart: unless-stopped

  # Files Service
  files-service:
    build:
      context: ..
      dockerfile: services/files/Dockerfile
    expose:
      - "${FILES_PORT}"
    environment:
      - PORT=${FILES_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PUBLIC_ENDPOINT=${MINIO_PUBLIC_ENDPOINT}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_USE_SSL=${MINIO_USE_SSL}

    depends_on:
      - main-db
    restart: unless-stopped
  minio:
    image: minio/minio:latest
    container_name: tutuplapak-minio
    env_file: .env
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001" # Remove console port for production
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    # command: server /data --console-address ":9001"
    command: server /data # Remove --console-address flag for production
    # networks:
    #   - tutuplapak-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  # Main Database
  main-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - main_data:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d/:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  main_data:
    driver: local

networks:
  default:
    name: tutuplapak-network
