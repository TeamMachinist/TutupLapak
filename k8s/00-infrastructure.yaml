# k8s/00-infrastructure.yaml
---
# PostgreSQL
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: machinist-tutuplapak
data:
  POSTGRES_DB: "tutuplapak"
  POSTGRES_USER: "user"
  POSTGRES_PASSWORD: "password"
  PGDATA: "/var/lib/postgresql/data/pgdata"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: machinist-tutuplapak
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: machinist-tutuplapak
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - user
            - -d
            - tutuplapak
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - user
            - -d
            - tutuplapak
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: main-db
  namespace: machinist-tutuplapak
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP

---
# Redis (without password for simplicity)
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: machinist-tutuplapak
data:
  redis.conf: |
    bind 0.0.0.0
    port 6379
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    save ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: machinist-tutuplapak
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - /etc/redis/redis.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-config-volume
          mountPath: /etc/redis
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: redis-config-volume
        configMap:
          name: redis-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: machinist-tutuplapak
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  type: ClusterIP

---
# MinIO
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-config
  namespace: machinist-tutuplapak
data:
  MINIO_ROOT_USER: "minioaccess"
  MINIO_ROOT_PASSWORD: "miniosecret"
  MINIO_DEFAULT_BUCKETS: "tutuplapak-files"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: machinist-tutuplapak
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: machinist-tutuplapak
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        ports:
        - containerPort: 9000
        - containerPort: 9001
        envFrom:
        - configMapRef:
            name: minio-config
        command:
        - /bin/bash
        - -c
        args:
        - minio server /data --console-address :9001
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "400m"
        volumeMounts:
        - name: minio-storage
          mountPath: /data
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: machinist-tutuplapak
  labels:
    app: minio
spec:
  selector:
    app: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
    protocol: TCP
  - name: console
    port: 9001
    targetPort: 9001
    protocol: TCP
  type: ClusterIP